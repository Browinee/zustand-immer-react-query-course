<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="fa97e883-f774-4dbb-a9d8-c4255b15f804" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.eslintcache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.eslintrc.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/.eslintrc.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/fixtures/example.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/fixtures/profile.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/fixtures/users.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/global.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/actions.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/aliasing.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/assertions.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/connectors.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/cookies.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/cypress_api.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/files.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/local_storage.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/location.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/misc.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/navigation.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/network_requests.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/querying.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/spies_stubs_clocks.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/traversal.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/utilities.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/viewport.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/waiting.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/examples/window.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/ui/AntiHeroesPage.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/ui/HeroesPage.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/integration/ui/VillainsPage.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/plugins/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/screenshots/ui/AntiHeroesPage.spec.ts/Anti-Heroes Page -- Refetch -- should refetch all anti heroes after deleting all anti heroes (failed).png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/support/commands.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/support/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/support/utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cypress/tsconfig.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/db.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/netlify.toml" beforeDir="false" afterPath="$PROJECT_DIR$/netlify.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Routes.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/Routes.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/axios/api-config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/axios/api-config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/NavigationBar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/NavigationBar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/SharedForm.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/SharedForm.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/SharedInput.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/SharedInput.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/TitleBar.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/TitleBar.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/components/UpdateUiLabel.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/UpdateUiLabel.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mocks/handlers/antiHeroHandler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/mocks/handlers/antiHeroHandler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mocks/handlers/heroHandler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/mocks/handlers/heroHandler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mocks/handlers/villainHandler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/mocks/handlers/villainHandler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/AntiHeroesPage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/AntiHeroesPage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/HeroesPage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/HeroesPage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/HomePage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/HomePage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pages/VillainsPage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/pages/VillainsPage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test-utils/testing-library-utils.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/test-utils/testing-library-utils.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1vt6nidbZGdec6VmN8xNrACfaoK" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.standard" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.standard" value="" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="prettierjs.PrettierConfiguration.Package" value="$PROJECT_DIR$/node_modules/prettier" />
    <property name="settings.editor.selected.configurable" value="settings.javascript.prettier" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fa97e883-f774-4dbb-a9d8-c4255b15f804" name="Changes" comment="" />
      <created>1627369207062</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1627369207062</updated>
      <workItem from="1627369209482" duration="5235000" />
      <workItem from="1644670428819" duration="820000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>